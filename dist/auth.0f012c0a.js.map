{"version":3,"sources":["js/auth.js"],"names":["document","querySelector","addEventListener","AutValid","hidden","form","getElementById","isValid","reportValidity","AuthFormHandler","once","login","pass","event","preventDefault","value","authWithEmailAndPassword","then","IsToken","email","password","apiKey","fetch","method","body","JSON","stringify","returnSecureToken","headers","response","json","data","idToken","token","sessionStorage","setItem","click","alert"],"mappings":"AAAA;AACAA,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,gBAApC,CAAqD,OAArD,EAA8DC,QAA9D;AACAH,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCG,MAAhC,GAAyC,IAAzC;;AAEA,SAASD,QAAT,GAAmB;AACf,MAAIE,IAAI,GAAGL,QAAQ,CAACM,cAAT,CAAwB,SAAxB,CAAX;AACA,MAAIC,OAAO,GAAGF,IAAI,CAACG,cAAL,EAAd;;AAEA,MAAID,OAAJ,EAAa;AACTF,IAAAA,IAAI,CAACH,gBAAL,CAAsB,QAAtB,EAAgCO,eAAhC,EAAiD;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAjD;AACH;AACJ;;AAED,IAAIC,KAAK,GAAG,IAAZ;AAAA,IAAkBC,IAAI,GAAG,IAAzB;;AAEA,SAASH,eAAT,CAAyBI,KAAzB,EAA+B;AAC3BA,EAAAA,KAAK,CAACC,cAAN;AAEAH,EAAAA,KAAK,GAAGX,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCc,KAAzC;AACAH,EAAAA,IAAI,GAAGZ,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCc,KAAvC;;AAEA,MAAIJ,KAAK,IAAI,IAAT,IAAiBC,IAAI,IAAI,IAA7B,EAAkC;AAC9BI,IAAAA,wBAAwB,CAACL,KAAD,EAAQC,IAAR,CAAxB,CACCK,IADD,CACMC,OADN;AAEH;AACJ;;AAED,SAASF,wBAAT,CAAkCG,KAAlC,EAAyCC,QAAzC,EAAkD;AAC9C,MAAMC,MAAM,GAAG,yCAAf;AACA,SAAOC,KAAK,qFAA8ED,MAA9E,GAAuF;AAC/FE,IAAAA,MAAM,EAAE,MADuF;AAE/FC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBP,MAAAA,KAAK,EAALA,KADiB;AACVC,MAAAA,QAAQ,EAARA,QADU;AAEjBO,MAAAA,iBAAiB,EAAE;AAFF,KAAf,CAFyF;AAM/FC,IAAAA,OAAO,EAAE;AACL,sBAAiB;AADZ;AANsF,GAAvF,CAAL,CAUNX,IAVM,CAUD,UAAAY,QAAQ;AAAA,WAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,GAVP,EAWNb,IAXM,CAWD,UAAAc,IAAI;AAAA,WAAIA,IAAI,CAACC,OAAT;AAAA,GAXH,CAAP;AAYH;;AAED,SAASd,OAAT,CAAiBe,KAAjB,EAAuB;AACnB,MAAGA,KAAH,EAAS;AACLC,IAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCF,KAAhC;AACAjC,IAAAA,QAAQ,CAACC,aAAT,CAAuB,OAAvB,EAAgCmC,KAAhC;AACH,GAHD,MAII;AACAC,IAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;AACJ","file":"auth.0f012c0a.js","sourceRoot":"..","sourcesContent":["//import {GetToken} from '../html/js/app.js'\r\ndocument.querySelector('.auth-btn').addEventListener('click', AutValid)\r\ndocument.querySelector('#link').hidden = true\r\n\r\nfunction AutValid(){\r\n    var form = document.getElementById('formAut')\r\n    var isValid = form.reportValidity()\r\n  \r\n    if (isValid) {\r\n        form.addEventListener('submit', AuthFormHandler, {once: true})\r\n    }\r\n}\r\n\r\nvar login = null, pass = null\r\n\r\nfunction AuthFormHandler(event){\r\n    event.preventDefault()\r\n  \r\n    login = document.querySelector('#login').value\r\n    pass = document.querySelector('#pass').value\r\n  \r\n    if (login != null && pass != null){\r\n        authWithEmailAndPassword(login, pass)\r\n        .then(IsToken)\r\n    }\r\n}\r\n\r\nfunction authWithEmailAndPassword(email, password){\r\n    const apiKey = 'AIzaSyD5rPbLqIhxX1RdUUJdsPOSqJCIZIjfV3o'\r\n    return fetch(`https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`,{\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            email, password,\r\n            returnSecureToken: true\r\n        }),\r\n        headers: {\r\n            'Content-Type' : 'application/json'\r\n        }\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => data.idToken)\r\n}\r\n\r\nfunction IsToken(token){\r\n    if(token){\r\n        sessionStorage.setItem('Token', token)\r\n        document.querySelector('#link').click()\r\n    }\r\n    else{\r\n        alert('Неверные данные для входа')\r\n    }\r\n}"]}